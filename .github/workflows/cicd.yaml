name: Grader Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: | 
          mvn clean install -DskipTests

      - name: Create Docker Network
        run: |
          docker network create app-network

      - name: Run Container Mysql:8.1 Mock
        run: |
          docker run -d \
          --name db \
          --network app-network \
          -e MYSQL_ROOT_PASSWORD=password \
          -e MYSQL_DATABASE=grader \
          -p 3307:3306 \
          --health-interval=10s \
          --health-timeout=5s \
          --health-retries=5 \
          mysql:8.1

      - name: Run Integration Test
        run: |
          mvn test

#      - name: Verify container python-compiler-service is running
#        run: |
#          docker ps | grep python-compiler-service
#
#      - name: Wait container start finish
#        run: |
#          sleep 10
#
#      - name: Run test run code on vm
#        run: |
#          curl -X GET http://localhost:8001/python-compiler-service/sandbox/test-code-vm || exit 1
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Push Docker image
#        run: |
#          docker tag python-sandbox:latest ${{ secrets.DOCKER_USERNAME }}/python-sandbox:latest
#          docker tag python-compiler-service:latest ${{ secrets.DOCKER_USERNAME }}/python-compiler-service:latest
#          docker push ${{ secrets.DOCKER_USERNAME }}/python-sandbox:latest
#          docker push ${{ secrets.DOCKER_USERNAME }}/python-compiler-service:latest



